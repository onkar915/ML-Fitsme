/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.11.3.0 (NJsonSchema v10.4.4.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming

export interface BodyMeasurement {
  waist?: number;
  chest?: number;
  hip?: number;
  length?: number;
  bmi?: number;
}

export enum BodyShapeType {
  Pear = "Pear",
  Apple = "Apple",
  Hourglass = "Hourglass",
  Rectangle = "Rectangle",
}

export interface BrandView {
  brandId?: string;
  brandCode?: string | undefined;
}

export interface CalculatorRequest {
  age: number;
  height: number;
  torsoLength: TorsoType;
  bodyWeight: number;
  gender: GenderType;
  productCode: string;
  brandCode: string;
  bodyShape: BodyShapeType;
  fitPreference: FitPreferenceType;
  emailAddress: string;
}

export interface CalculatorResponse {
  calculatedProductRanges?: MeasurementSizeRage;
  bodyMeasurement?: BodyMeasurement;
  calculatedBodyMeasurement?: BodyMeasurement;
  measuredSize?: string | undefined;
  deltaPercentage?: DeltaPercentage;
}

export interface DeltaPercentage {
  waist?: number;
  chest?: number;
  hip?: number;
  length?: number;
  bmi?: number;
  average?: number;
}

export interface DoubleDoubleStringTuple {
  readonly item1?: number;
  readonly item2?: number;
  readonly item3?: string | undefined;
}

export enum FitPreferenceType {
  Slim = "Slim",
  Average = "Average",
  Loose = "Loose",
}

export enum GarmentType {
  Shirt = "Shirt",
  Jacket = "Jacket",
  Sweater = "Sweater",
  Pants = "Pants",
  Skirt = "Skirt",
  Dress = "Dress",
}

export enum GenderType {
  Male = "Male",
  Female = "Female",
}

export interface MeasurementSizeRage {
  chestRange?: DoubleDoubleStringTuple[] | undefined;
  waistRange?: DoubleDoubleStringTuple[] | undefined;
  lengthRange?: DoubleDoubleStringTuple[] | undefined;
  hipRange?: DoubleDoubleStringTuple[] | undefined;
}

export interface ProblemDetails {
  type?: string | undefined;
  title?: string | undefined;
  status?: number | undefined;
  detail?: string | undefined;
  instance?: string | undefined;
}

export interface ProductMeasurementView {
  productId?: string | undefined;
  bodyMeasurement?: BodyMeasurement;
  productSize?: string | undefined;
}

export interface ProductView {
  brandId?: string;
  productId?: string;
  productCode?: string | undefined;
  productName?: string | undefined;
  garmentType?: GarmentType;
  productMeasurements?: ProductMeasurementView[] | undefined;
}

export enum TorsoType {
  Short = "Short",
  Regular = "Regular",
  Long = "Long",
}

export interface FileParameter {
  data: any;
  fileName: string;
}
